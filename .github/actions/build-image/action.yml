name: Build Docker Image
description: Builds a docker image for web based on the mode passed in
inputs:
  mode:
    required: true
  npmAuthToken:
    required: true
outputs:
  image:
    description: The image including the tag that was created
    value: ${{ steps.output-image.outputs.image }}
  tag:
    description: The image including the tag that was created
    value: ${{ steps.image-tag.outputs.tag }}
runs:
  using: composite
  steps:
    - id: image-tag
      run: |
        declare -A modesToTags=( ["prod"]="prod" ["staged"]="staged" )
        mode="${{ inputs.mode }}"
        tag="${modesToTags[$mode]}"
        echo "Building tag '$tag'"

        if [[ "$tag" == "" ]]; then exit 1 ; fi

        echo "::set-output name=tag::$(echo $tag)"
      shell: bash
    - run: 'if [[ "${{ steps.image-tag.outputs.tag }}" == "" ]] ; then echo "Invalid environment: ${{ steps.image-tag.outputs.tag }}" ; exit 1 ; fi'
      shell: bash
    - id: output-image
      run: echo "::set-output name=image::$(echo 'docker.pkg.github.com/anime-skip/web/website:${{ steps.image-tag.outputs.tag }}')"
      shell: bash
    - run: |
        declare -A modesToBuildModes=( ["prod"]="production" ["staged"]="staged" )
        mode="${{ inputs.mode }}"
        buildMode="${modesToBuildModes[$mode]}"
        echo "Building for '$buildMode'"
        docker build --build-arg MODE=${buildMode} --build-arg NPM_AUTH_TOKEN=${{ inputs.npmAuthToken }} . -t "${{ steps.output-image.outputs.image }}"
      shell: bash
