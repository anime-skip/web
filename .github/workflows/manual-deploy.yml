name: Manual Deploy
on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Environment (prod or staged)'
        required: true
        default: 'staged'

jobs:
  verify:
    name: Verify Code
    runs-on: ubuntu-20.04
    steps:
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '14.15.3'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@anime-skip'

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        uses: ./.github/actions/install
        with:
          npmAuthToken: ${{ secrets.ANIME_SKIP_PACKAGES_TOKEN }}

      - name: Run checks
        uses: ./.github/actions/run-checks
        with:
          mode: ${{ github.event.inputs.mode }}

      - name: Upload ${{ github.event.inputs.mode }} artifact
        uses: actions/upload-artifact@v2
        with:
          name: website-${{ github.event.inputs.mode }}
          path: dist/

  deploy:
    name: Deploy to S3
    runs-on: ubuntu-20.04
    needs: verify
    steps:
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '14.15.3'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@anime-skip'

      - name: Install AWS
        uses: unfor19/install-aws-cli-action@v1

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: website-${{ github.event.inputs.mode }}
          path: dist

      - name: Display structure of downloaded files
        run: ls -R

      - name: Deploy to ${{ github.event.inputs.mode }}
        run: yarn deploy:${{ github.event.inputs.mode }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SKIP_BUILD: true
